---
import { bestMatch } from "@udia/mime-parser";
import { languageTags } from "../i18n/languages";
// This is, unfortunately, syntactically invalid
// import 404 from "./404.astro"

const acceptLanguage = Astro.request.headers.get("accept-language");
let language = "en";
if (acceptLanguage) {
  language = bestMatch(languageTags, acceptLanguage) || "en";
}
const { path } = Astro.params;
const langPath = `/${language}/${path}`;
const pages = await Astro.glob("./**/*");
const urls = pages.map((page) => page.url);

let redirectTo = null;
if (urls.includes(langPath)) {
  redirectTo = langPath;
}

const data = JSON.stringify(Astro, undefined, 2);
if (redirectTo === null) {
  Astro.response.status = 404;
  Astro.response.statusText = "Not Found";
}
---

{
  redirectTo ? (
    <meta http-equiv="refresh" content={`0;url=${redirectTo}`} />
  ) : (
    <>
      <h1>Not Found</h1>
      <code style="max-width: 100vw;">
        <pre>{data}</pre>
      </code>
    </>
  )
}
