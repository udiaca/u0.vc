---
import DateDelta from '../components/DateDelta.svelte'
import { parseLocalesFromAcceptLanguage } from '../utils/parseLocalesFromAcceptLanguage'
import postComparator from '../utils/postComparator'
import BaseLayout from './BaseLayout.astro'
const { frontmatter } = Astro.props
const { title, center, description, markdownStyle } = frontmatter || Astro.props

const { publishedAt, updatedAt } = frontmatter

const parseDate = (rawDate: string) => {
  try {
    const date = new Date(rawDate);
    if (isNaN(date.valueOf())) {
      throw SyntaxError('invalid date');
    }
    return date;
  } catch (err) {
    return new Date();
  }
}

const publishedAtDate = parseDate(publishedAt)
const updatedAtDate = parseDate(updatedAt)

const locales = parseLocalesFromAcceptLanguage(
  Astro.request.headers.get('accept-language') || ''
)

const allPosts = await Astro.glob('../pages/**/*.md');

allPosts.sort(postComparator).reverse();

// get the current post within all posts
const curIdx = allPosts.findIndex((allPost) => allPost.url === Astro.props.url)
const prevIdx = curIdx - 1
const nextIdx = curIdx + 1
const lastIdx = allPosts.length - 1

const firstMd = allPosts[0]
const prevMd = allPosts[prevIdx]
// const curMd = allPosts[curIdx]
const nextMd = allPosts[nextIdx]
const lastMd = allPosts[lastIdx]

// are we currently being served on the index?
const disableLinks = Astro.url.pathname !== frontmatter.url

const MDLayout = disableLinks ? Fragment : BaseLayout
const noNext = nextMd?.url ? undefined : 'no-next';
const prevUrl = prevMd?.url || '/'

---

<MDLayout title={title}>
  <Fragment slot="head">
    <meta name="source-type" content="markdown" />
    {!!description && <meta name="description" content={description} />}
  </Fragment>

  <div class="journey-steps-container">
    <a href={lastMd?.url}>
      &LeftArrowBar;
      <span>index {lastIdx}</span>
    </a>
    <a href={nextMd?.url} class={noNext}>
      &LeftArrow;
      <span>index {nextIdx}</span>
    </a>
    {curIdx}
    <a href={prevUrl}>
      {prevUrl === '/' ? 'UDIA' : <span>index {prevIdx}</span>}
      &RightArrow;
    </a>
    <a href={firstMd?.url || "/"}>
      <span>index <code>0</code></span>
      &RightArrowBar;
    </a>
  </div>

  <div id="markdown-wrapper" class={center ? 'center' : undefined}>
    <h1 id="markdown-title">{title}</h1>
    <div id="markdown-description">
      {!!description && <>
        <dt>Description</dt>
        <dd>{description}</dd>
      </>}
      <dl>
        {
          updatedAtDate.valueOf() !== publishedAtDate.valueOf() && (
            <>
              <dt>Last Updated</dt>
              <dd>
                <DateDelta
                  client:load
                  locales={locales}
                  toDelta={updatedAtDate}
                />
              </dd>
            </>
          )
        }
        <dt>Published</dt>
        <dd>
          <DateDelta
            client:load
            locales={locales}
            toDelta={publishedAtDate}
          />
        </dd>
      </dl>
    </div>
    <slot />
  </div>

  <div class="journey-steps-container">
    <a href={lastMd?.url}>
      &LeftArrowBar;
      <span>index {lastIdx}</span>
    </a>
    <a href={nextMd?.url} class={noNext}>
      &LeftArrow;
      <span>index {nextIdx}</span>
    </a>
    {curIdx}
    <a href={prevUrl}>
      {prevUrl === '/' ? 'UDIA' : <span>index {prevIdx}</span>}
      &RightArrow;
    </a>
    <a href={firstMd?.url || "/"}>
      <span>index <code>0</code></span>
      &RightArrowBar;
    </a>
  </div>

  <code><pre>of a journey (length {allPosts.length})</pre></code>

  <details>
    <summary><code>frontmatter</code></summary>
    <code>
      <pre>{JSON.stringify(frontmatter, undefined, 2)}</pre>
    </code>
  </details>
  <style>
    h1 {
      color: var(--emph-color);
      font-size: 2.3em;
    }
    #markdown-title {
      margin: 1rem 0 0 0;
      align-self: flex-start;
    }
    #markdown-description {
      margin: 0;
      align-self: flex-start;
    }
    #markdown-description > dl {
      margin: 0;
    }
    #markdown-wrapper {
      margin: 1em;
      align-items: flex-start;
      max-width: 100vw;
      display: flex;
      flex-direction: column;
      column-gap: 0.5em;
    }
    .journey-steps-container {
      display: grid;
      grid-template-columns: 1fr 1fr 1fr 1fr 1fr;
      column-gap: 1em;
      justify-items: center;
      align-items: center;
    }

    .journey-steps-container * {
      text-align: center;
    }

    .journey-steps-container .no-next {
      cursor: not-allowed;
    }

    .center {
      display: grid;
      justify-items: center;
    }
  </style>
  <style is:global>
    #markdown-wrapper > *:not(:last-child) {
      margin-bottom: 0;
    }
  </style>
</MDLayout>
